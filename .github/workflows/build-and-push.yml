name: Build Image using Containerfile
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        build-mount-path: /large_store
        root-reserve-mb: 512
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Enable btrfs zstd:3 compress for build space
      run: |
        store_dev=`sed -e '/^[^ ]* \/large_store /!d' -e 's@ .*@@g' -e '/^\/dev/!d' /proc/mounts | head -n 1`
        sudo umount /large_store
        sudo mkfs.btrfs -m single -d single -K -f "$store_dev"
        sudo mount -o autodefrag,noatime,nobarrier,nodiscard,noflushoncommit,notreelog,compress=zstd:3,commit=432000 "$store_dev" /large_store

    - name: Move podman storage to build space
      run: |
        sudo cp -va /var/lib/containers /large_store/sys-stor || sudo mkdir /large_store/sys-stor
        sudo mkdir /large_store/usr-stor && sudo chown runner:runner /large_store/usr-stor
        [ ! -d ~/.local/share/containers ] || cp -va ~/.local/share/containers/. /large_store/usr-stor/.
        sudo rm -vrf /var/lib/containers ~/.local/share/containers
        sudo ln -srv /large_store/sys-stor /var/lib/containers || :
        ln -srv /large_store/usr-stor ~/.local/share/containers || :
        sudo cp -va /var/tmp /large_store/vartmp
        sudo rm -vrf /var/tmp
        sudo ln -srv /large_store/vartmp /var/tmp

    - uses: actions/checkout@v4

    - name: Buildah Action
      uses: redhat-actions/buildah-build@v2
      with:
        image: clearlinux-dev
        tags: latest ${{ github.sha }}
        containerfiles: |
          ./Dockerfile

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
